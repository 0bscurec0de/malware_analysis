import pefile


class TrickBot(object):
    @staticmethod
    def _save_file(file_name: str, binary: bytes):
        with open(file_name, 'wb') as file:
            file.write(binary)

    def __init__(self, path_file: str):
        self.pe_file = pefile.PE(path_file)
        self.resources = list()

    def _get_resources(self):
        rt_index = [entry.id for entry in self.pe_file.DIRECTORY_ENTRY_RESOURCE.entries]\
            .index(pefile.RESOURCE_TYPE['RT_RCDATA'])
        rt_dir = self.pe_file.DIRECTORY_ENTRY_RESOURCE.entries[rt_index]

        for item in rt_dir.directory.entries:
            data_rva = item.directory.entries[0].data.struct.OffsetToData
            size = item.directory.entries[0].data.struct.Size
            self.resources.append(self.pe_file.get_data(data_rva, size))

    def _decode_payload(self):
        self._get_resources()
        decoded_res = list()

        for item in self.resources:
            tmp_data = bytearray()
            key = 0x3039

            for data in item:
                tmp_data.append(data ^ (key & 0xFF))
                key = key * 0x0AE529 + 0x24D69
            decoded_res.append(tmp_data)
        return decoded_res

    def get_payload(self):
        decoded_res = self._decode_payload()
        names = ['bot_32_bits', 'bot_64_bits', 'loader_64_bits']

        for i in range(0, len(decoded_res)):
            self._save_file(names[i], decoded_res[i])
